{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","imagesNumbers","step","frameSize","itemWidth","animationDuration","infinite","useState","moveRight","getMoveRight","lastPosition","length","nextImages","timer","window","setInterval","clearInterval","className","style","width","transform","map","imagesNumber","src","alt","type","disabled","onClick","App","state","this","action","method","name","min","max","value","onChange","event","setState","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ebcb992.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  imagesNumbers: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  imagesNumbers: images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [moveRight, getMoveRight] = useState(0);\n\n  const lastPosition: number = itemWidth * (images.length - frameSize) * -1;\n\n  function prevImages() {\n    if (moveRight === 0) {\n      return infinite ? getMoveRight(lastPosition) : getMoveRight(0);\n    }\n\n    if (moveRight + (step * itemWidth) > 0) {\n      return getMoveRight(0);\n    }\n\n    return getMoveRight(moveRight + (step * itemWidth));\n  }\n\n  function nextImages() {\n    if (moveRight === lastPosition) {\n      return infinite ? getMoveRight(0) : getMoveRight(lastPosition);\n    }\n\n    if (moveRight - (step * itemWidth) < lastPosition) {\n      return getMoveRight(lastPosition);\n    }\n\n    return getMoveRight(moveRight - (step * itemWidth));\n  }\n\n  const timer = window.setInterval(() => {\n    clearInterval(timer);\n\n    if (moveRight === lastPosition && !infinite) {\n      return;\n    }\n\n    nextImages();\n  }, animationDuration);\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{ width: itemWidth * frameSize }}\n    >\n      <div\n        className=\"Carousel__container\"\n        style={{ transform: `translateX(${moveRight}px)` }}\n      >\n        <ul className=\"Carousel__list\">\n          {images.map(imagesNumber => (\n            <li className=\"Carousel__list-item\" key={imagesNumber}>\n              <img\n                style={{ width: itemWidth }}\n                src={`./img/${imagesNumber}.png`}\n                alt={imagesNumber}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"button__container\">\n        <button\n          type=\"button\"\n          disabled={infinite ? false : moveRight === 0}\n          onClick={() => {\n            clearInterval(timer);\n            prevImages();\n          }}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          disabled={infinite ? false : moveRight === lastPosition}\n          onClick={() => {\n            clearInterval(timer);\n            nextImages();\n          }}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130, // px\n    animationDuration: 1000, // 1000\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <form\n          action=\"/\"\n          method=\"post\"\n          className=\"values\"\n        >\n          <label className=\"values__label\">\n            step:\n            <input\n              className=\"values__input\"\n              type=\"number\"\n              name=\"step\"\n              min=\"1\"\n              max=\"5\"\n              step=\"1\"\n              value={step}\n              onChange={(event) => {\n                this.setState({ step: +event.target.value });\n              }}\n            />\n          </label>\n\n          <label className=\"values__label\">\n            frameSize:\n            <input\n              className=\"values__input\"\n              type=\"number\"\n              name=\"frameSize\"\n              min=\"1\"\n              max=\"5\"\n              step=\"1\"\n              value={frameSize}\n              onChange={(event) => {\n                this.setState({ frameSize: +event.target.value });\n              }}\n            />\n          </label>\n\n          <label className=\"values__label\">\n            itemWidth (px):\n            <input\n              className=\"values__input\"\n              type=\"range\"\n              name=\"frameSize\"\n              min=\"130\"\n              max=\"300\"\n              step=\"10\"\n              value={itemWidth}\n              onChange={(event) => {\n                this.setState({ itemWidth: +event.target.value });\n              }}\n            />\n          </label>\n\n          <label className=\"values__label\">\n            animationDuration (ms):\n            <input\n              className=\"values__input\"\n              name=\"animationDuration\"\n              type=\"number\"\n              min=\"1000\"\n              max=\"5000\"\n              step=\"1000\"\n              value={animationDuration}\n              onChange={(event) => {\n                this.setState({ animationDuration: +event.target.value });\n              }}\n            />\n          </label>\n\n          <label className=\"values__label\">\n            infinite:\n            <select\n              name=\"infinite\"\n              onChange={(event) => {\n                this.setState({ infinite: event.target.value === 'true' });\n              }}\n            >\n              <option value=\"fasle\">fasle</option>\n              <option value=\"true\">true</option>\n            </select>\n          </label>\n        </form>\n\n        <Carousel\n          imagesNumbers={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}