{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","moveRight","getMoveRight","lastPosition","length","className","style","width","transform","transition","map","image","src","alt","type","title","disabled","onClick","App","state","handlerStepChange","event","setState","target","value","handlerFrameSizeChange","handlerItemWidthChange","handlerAnimationDurationChange","handlerInfiniteChange","this","action","method","name","min","max","onChange","defaultValue","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gQAiGeA,EArFmB,SAAC,GAO5B,IANLC,EAMI,EANJA,OACAC,EAKI,EALJA,KACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,SAEA,EAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAuBN,GAAaH,EAAOU,OAASR,IAAc,EA0BxE,OACE,sBACES,UAAU,WACVC,MAAO,CAAEC,MAAOV,EAAYD,GAF9B,UAIE,qBACES,UAAU,sBACVC,MAAO,CACLE,UAAU,cAAD,OAAgBP,EAAhB,OACTQ,WAAW,aAAD,OAAeX,EAAf,cAJd,SAOE,oBAAIO,UAAU,iBAAd,SACGX,EAAOgB,KAAI,SAAAC,GAAK,OACf,oBAAIN,UAAU,sBAAd,SACE,qBACEC,MAAO,CAAEC,MAAOV,GAChBe,IAAKD,EACLE,IAAKF,KAJgCA,UAW/C,sBAAKN,UAAU,oBAAf,UACE,wBACES,KAAK,SACLC,MAAM,kBACNC,UAAUjB,GAAiC,IAAdE,EAC7BgB,QAtDR,WACE,OACoBf,EADF,IAAdD,EACKF,EAAwBI,EAA6B,EAG1DF,EAAaN,EAAOE,EAAa,EACf,EAGFI,EAAaN,EAAOE,IAyCpC,kBASA,wBACEiB,KAAK,SACLC,MAAM,cACN,UAAQ,OACRC,UAAUjB,GAAmBE,IAAcE,EAC3Cc,QApDR,WACE,OACoBf,EADhBD,IAAcE,EACTJ,EAAwB,EAAkBI,EAG/CF,EAAaN,EAAOE,EAAaM,EACfA,EAGFF,EAAaN,EAAOE,IAsCpC,yBCtEFqB,E,4MACJC,MAAQ,CACNzB,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFC,KAAM,EACNC,UAAW,EACXC,UAAW,IACXC,kBAAmB,IACnBC,UAAU,G,EAGZqB,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CAAE3B,MAAO0B,EAAME,OAAOC,S,EAGtCC,uBAAyB,SAACJ,GACxB,EAAKC,SAAS,CAAE1B,WAAYyB,EAAME,OAAOC,S,EAG3CE,uBAAyB,SAACL,GACxB,EAAKC,SAAS,CAAEzB,WAAYwB,EAAME,OAAOC,S,EAG3CG,+BAAiC,SAC/BN,GAEA,EAAKC,SAAS,CAAExB,mBAAoBuB,EAAME,OAAOC,S,EAGnDI,sBAAwB,SAACP,GACvB,EAAKC,SAAS,CAAEvB,SAAiC,SAAvBsB,EAAME,OAAOC,S,4CAGzC,WACE,MAOIK,KAAKV,MANPzB,EADF,EACEA,OACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,UACAC,EALF,EAKEA,kBACAC,EANF,EAMEA,SAGF,OACE,sBAAKM,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmCX,EAAOU,OAA1C,aAEA,uBACE0B,OAAO,IACPC,OAAO,OACP1B,UAAU,SAHZ,UAKE,wBAAOA,UAAU,gBAAjB,kBAEE,uBACEA,UAAU,gBACVS,KAAK,SACLkB,KAAK,OACLC,IAAI,IACJC,IAAI,IACJvC,KAAK,IACL6B,MAAO7B,EACPwC,SAAUN,KAAKT,uBAInB,wBAAOf,UAAU,gBAAjB,uBAEE,uBACEA,UAAU,gBACVS,KAAK,SACLkB,KAAK,YACLC,IAAI,IACJC,IAAI,IACJvC,KAAK,IACL6B,MAAO5B,EACPuC,SAAUN,KAAKJ,4BAInB,wBAAOpB,UAAU,gBAAjB,4BAEE,uBACEA,UAAU,gBACVS,KAAK,QACLkB,KAAK,YACLC,IAAI,MACJC,IAAI,MACJvC,KAAK,KACL6B,MAAO3B,EACPsC,SAAUN,KAAKH,4BAInB,wBAAOrB,UAAU,gBAAjB,oCAEE,uBACEA,UAAU,gBACV2B,KAAK,oBACLlB,KAAK,SACLmB,IAAI,OACJC,IAAI,OACJvC,KAAK,MACL6B,MAAO1B,EACPqC,SAAUN,KAAKF,oCAInB,wBAAOtB,UAAU,gBAAjB,sBAEE,yBACE2B,KAAK,WACLI,aAAa,QACbD,SAAUN,KAAKD,sBAHjB,UAKE,wBAAQJ,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,2BAKN,cAAC,EAAD,CACE9B,OAAQA,EACRC,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,EACnBC,SAAUA,W,GA1IFsC,IAAMC,WAkJTpB,IC5JfqB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8e565cf1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [moveRight, getMoveRight] = useState(0);\n\n  const lastPosition: number = itemWidth * (images.length - frameSize) * -1;\n\n  function prevImages() {\n    if (moveRight === 0) {\n      return infinite ? getMoveRight(lastPosition) : getMoveRight(0);\n    }\n\n    if (moveRight + (step * itemWidth) > 0) {\n      return getMoveRight(0);\n    }\n\n    return getMoveRight(moveRight + (step * itemWidth));\n  }\n\n  function nextImages() {\n    if (moveRight === lastPosition) {\n      return infinite ? getMoveRight(0) : getMoveRight(lastPosition);\n    }\n\n    if (moveRight - (step * itemWidth) < lastPosition) {\n      return getMoveRight(lastPosition);\n    }\n\n    return getMoveRight(moveRight - (step * itemWidth));\n  }\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{ width: itemWidth * frameSize }}\n    >\n      <div\n        className=\"Carousel__container\"\n        style={{\n          transform: `translateX(${moveRight}px)`,\n          transition: `transform ${animationDuration}ms linear`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {images.map(image => (\n            <li className=\"Carousel__list-item\" key={image}>\n              <img\n                style={{ width: itemWidth }}\n                src={image}\n                alt={image}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"button__container\">\n        <button\n          type=\"button\"\n          title=\"previous images\"\n          disabled={infinite ? false : moveRight === 0}\n          onClick={prevImages}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          title=\"next images\"\n          data-cy=\"next\"\n          disabled={infinite ? false : moveRight === lastPosition}\n          onClick={nextImages}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130, // px\n    animationDuration: 1000, // 1000\n    infinite: false,\n  };\n\n  handlerStepChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.target.value });\n  };\n\n  handlerFrameSizeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.target.value });\n  };\n\n  handlerItemWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.target.value });\n  };\n\n  handlerAnimationDurationChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    this.setState({ animationDuration: +event.target.value });\n  };\n\n  handlerInfiniteChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ infinite: event.target.value === 'true' });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <form\n          action=\"/\"\n          method=\"post\"\n          className=\"values\"\n        >\n          <label className=\"values__label\">\n            step:\n            <input\n              className=\"values__input\"\n              type=\"number\"\n              name=\"step\"\n              min=\"1\"\n              max=\"5\"\n              step=\"1\"\n              value={step}\n              onChange={this.handlerStepChange}\n            />\n          </label>\n\n          <label className=\"values__label\">\n            frameSize:\n            <input\n              className=\"values__input\"\n              type=\"number\"\n              name=\"frameSize\"\n              min=\"1\"\n              max=\"5\"\n              step=\"1\"\n              value={frameSize}\n              onChange={this.handlerFrameSizeChange}\n            />\n          </label>\n\n          <label className=\"values__label\">\n            itemWidth (px):\n            <input\n              className=\"values__input\"\n              type=\"range\"\n              name=\"itemWidth\"\n              min=\"130\"\n              max=\"300\"\n              step=\"10\"\n              value={itemWidth}\n              onChange={this.handlerItemWidthChange}\n            />\n          </label>\n\n          <label className=\"values__label\">\n            animationDuration (ms):\n            <input\n              className=\"values__input\"\n              name=\"animationDuration\"\n              type=\"number\"\n              min=\"1000\"\n              max=\"5000\"\n              step=\"500\"\n              value={animationDuration}\n              onChange={this.handlerAnimationDurationChange}\n            />\n          </label>\n\n          <label className=\"values__label\">\n            infinite:\n            <select\n              name=\"infinite\"\n              defaultValue=\"false\"\n              onChange={this.handlerInfiniteChange}\n            >\n              <option value=\"false\">false</option>\n              <option value=\"true\">true</option>\n            </select>\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}